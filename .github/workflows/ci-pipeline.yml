name: CI Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  IMAGE_TAG: ${{ github.sha }}
  AWS_REGION: us-east-1

jobs:
  build-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          submodules: false

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install frontend dependencies
        run: npm install

      - name: Build frontend
        run: npm run build

  build-backend:
    runs-on: ubuntu-latest
    needs: build-frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          submodules: false

      - name: Run backend tests with Docker Compose
        uses: adambirds/docker-compose-action@v1.5.0
        with:
          compose-file: "./docker-compose.yml"
          up-flags: "--build"
          down-flags: "--volumes"
          test-container: "backend"
          test-command: "npm test -- --coverage"

      - name: Upload backend coverage report
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage
          path: backend/coverage/

      - name: Configure AWS credentials
        if: github.event_name == 'push'
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        if: github.event_name == 'push'
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push frontend image
        if: github.event_name == 'push'
        run: |
          cd frontend
          docker build -t ${{ secrets.ECR_FRONTEND_URI }}:${{ env.IMAGE_TAG }} .
          docker push ${{ secrets.ECR_FRONTEND_URI }}:${{ env.IMAGE_TAG }}

      - name: Build and push backend image
        if: github.event_name == 'push'
        run: |
          cd backend
          docker build -t ${{ secrets.ECR_BACKEND_URI }}:${{ env.IMAGE_TAG }} .
          docker push ${{ secrets.ECR_BACKEND_URI }}:${{ env.IMAGE_TAG }}

  deploy:
    needs: build-backend
    runs-on: ubuntu-latest
    steps:
      - name: Redeploy on EC2 via SSH
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            cd ~/backend
            git pull origin main
            npm install
            pm2 restart backend || npm start
